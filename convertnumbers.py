# -*- coding: utf-8 -*-
"""ConvertNumbers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lsz41mnNPLsen-VUxBsgwEDu_hkKorne
"""

pip install pylint

!pylint ConvertNumbers.ipynb

from google.colab import drive
drive.mount('/content/drive')

import os
DIR = "/content/drive/MyDrive/Maestría Inteligencia Artificial Aplicada/PS y AC"
os.chdir(DIR)

# PROCESADO DE ARCHIVOS-----------------------------------------------------------------------------------------------------------------
def procesar_archivo(tc):
    try:
        with open(tc, 'r') as archivo:
            archivo_tc = archivo.read().split()
            for numero_str in archivo_tc:
                numero = int(numero_str)
                binario = convertir_a_binario(numero)
                hexadecimal = convertir_a_hexadecimal(numero)
                print(f"Número: {numero} | Binario: {binario} | Hexadecimal: {hexadecimal}")
                guardar_en_archivo(tc, numero, binario, hexadecimal)
    except FileNotFoundError:
        print(f"Error: No se encontró el archivo '{tc}'.")

# CONVERSIONES BINARIO, HEXADECIMAL Y GUARDADO

def convertir_a_binario(numero):
    binario = ""
    while numero > 0:
        binario = str(numero % 2) + binario
        numero //= 2
    return binario


def convertir_a_hexadecimal(numero):
    hexadecimal = ""
    while numero > 0:
        rem = numero % 16
        if rem < 10:
            hexadecimal = str(rem) + hexadecimal
        else:
            hexadecimal = chr(ord('A') + rem - 10) + hexadecimal
        numero //= 16
    return hexadecimal


def guardar_en_archivo(nombre_archivo, numero, binario, hexadecimal):
    with open('ConvertionResults.txt', 'a') as archivo:
        archivo.write(f"Archivo: {nombre_archivo} | Número: {numero} | Binario: {binario} | Hexadecimal: {hexadecimal}\n")

#CORRIDA DE LOS 4 ARCHIVOS

archivos_tc = ['TC1 - 2.txt', 'TC2 - 2.txt', 'TC3 - 2.txt', 'TC4 - 2.txt']

# Procesar cada archivo
for archivo_tc in archivos_tc:
    print(f"\nProcesando archivo: {archivo_tc}")
    procesar_archivo(archivo_tc)